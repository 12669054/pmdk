#!/bin/bash -e
#
# Copyright 2016, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# pmempool_transform/TEST6 -- test for checking pmempool transform;
#                             pmem/issues#274
#
export UNITTEST_NAME=pmempool_transform/TEST6
export UNITTEST_NUM=6

. ../unittest/unittest.sh

require_test_type medium

require_fs_type any

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log
rm -rf $LOG && touch $LOG
rm -rf $LOG_TEMP && touch $LOG_TEMP

LAYOUT=OBJ_LAYOUT
POOLSET_IN=$DIR/poolset.in
POOLSET_OUT1=$DIR/poolset.out1
POOLSET_OUT2=$DIR/poolset.out2

# Create poolset files
cat << EOF > $POOLSET_IN
PMEMPOOLSET
20M $DIR/testfile00
20M $DIR/testfile01
EOF

cat << EOF > $POOLSET_OUT1
PMEMPOOLSET
20M $DIR/testfile00
20M $DIR/testfile01
REPLICA
20M $DIR/testfile10
20M $DIR/testfile11
EOF

cat << EOF > $POOLSET_OUT2
PMEMPOOLSET
20M $DIR/testfile00
20M $DIR/testfile01
REPLICA
20M $DIR/testfile20
20M $DIR/testfile21
EOF

# Log poolset structures
echo poolset_in >> $LOG_TEMP
cat $POOLSET_IN >> $LOG_TEMP
echo >> $LOG_TEMP
echo poolset_out1 >> $LOG_TEMP
cat $POOLSET_OUT1 >> $LOG_TEMP
echo >> $LOG_TEMP
echo poolset_out2 >> $LOG_TEMP
cat $POOLSET_OUT2 >> $LOG_TEMP
echo >> $LOG_TEMP

# Create a pool
expect_normal_exit $PMEMPOOL$EXESUFFIX create --layout=$LAYOUT\
	obj $POOLSET_IN
cat $LOG >> $LOG_TEMP

# Transform poolset
expect_normal_exit $PMEMPOOL$EXESUFFIX transform \
	$POOLSET_IN $POOLSET_OUT1 >> $LOG_TEMP

# Try to transform poolset again
expect_abnormal_exit $PMEMPOOL$EXESUFFIX transform \
	$POOLSET_IN $POOLSET_OUT2 >> $LOG_TEMP 2>&1

# Check metadata by pmempool info
dump_pool_info $POOLSET_OUT1 >> $LOG_TEMP

mv $LOG_TEMP $LOG
check

pass
