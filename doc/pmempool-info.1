.TH "pmempool\-info" "1" "" "" ""
.SS NAME
.PP
\f[B]pmempool\-info\f[] âˆ’ print basic information about Persistent
Memory Pool file
.SS SYNOPSIS
.IP
.nf
\f[C]
pmempool\ info\ [<options>]\ <file>
\f[]
.fi
.SS DESCRIPTION
.PP
The \f[B]pmempool\f[] invoked with \f[C]info\f[] command analyzes an
existing pool created by \f[B]NVML\f[] libraries.
The main task of this command is to print all usable information from
pool headers and user data in human readable format.
It automatically recognizes pool type by parsing and analyzing pool
header.
The recognition is done by checking the signature in pool header.
The main job of \f[C]info\f[] command is to present internal data
structures as they are stored in file but \f[I]not\f[] for checking
consistency.
For this purpose there is the \f[B]pmempool\-check(1)\f[] command
available.
.PP
The \f[B]pmempool\f[] with \f[C]info\f[] command analyzes pool file as
long as it is possible regarding \f[I]correctness\f[] of internal
meta\-data (correct offsets, sizes etc.).
If it is \f[I]not\f[] possible to analyze the rest of the file,
\f[B]pmempool\f[] exits with error code and prints appropriate error
message.
.PP
Currently there is lack of interprocess synchronization for pool files,
so the \f[C]info\f[] command should be invoked off\-line.
Using \f[B]pmempool\f[] on pool file which may be modified by another
process may lead to unexpected errors in pool file.
.PP
\f[C]pmempool\ info\f[] opens pool file in \f[I]read\-only\f[] mode so
the file will remain untouched after processing.
.PP
The \f[C]info\f[] command may collect and print basic statistics about
data usage.
The statistics are specific to the type of pool.
See \f[B]STATISTICS\f[] section for details.
.PP
Although the pool consistency is \f[I]not\f[] checked by the
\f[C]info\f[] command, it prints information about checksum errors
and/or offsets errors.
.SS Common options:
.PP
By default the \f[C]info\f[] command of \f[B]pmempool\f[] prints
information about the most important internal data structures from pool.
The particular set of headers and meta\-data depend on pool type.
The pool type is recognized automatically and appropriate information is
displayed in human\-readable format.
.PP
To force processing specified file(s) as desired pool type use
\f[C]\-f\f[] option with appropriate name of pool type.
The valid names off pool types are \f[I]blk\f[], \f[I]log\f[],
\f[I]obj\f[] or \f[I]btt\f[].
This option may be useful when the pool header is corrupted and
automatic recognition of pool type fails.
.PP
\f[C]\-f,\ \[en]force\ blk|log|obj|btt\f[]
.PP
: Force parsing pool as specified pool type.
.RS
.PP
By default only pool headers and internal meta\-data are displayed.
To display user data use \f[C]\-d\f[] option.
Using \f[C]\-r\f[] option you can specify number of blocks/bytes/data
chunks or objects using special text format.
See \f[B]RANGE\f[] section for details.
The range refers to \f[I]block numbers\f[] in case of pmem blk pool
type, to \f[I]chunk numbers\f[] in case of pmem log pool type and to
\f[I]object numbers\f[] in case of pmem obj pool type.
See \f[B]EXAMPLES\f[] section for an example of usage of these options.
.RE
.PP
\f[C]\-d,\ \[en]data\f[]
.PP
: Dump user data in hexadecimal format.
In case of pmem \f[I]blk\f[] pool type data is dumped in
\f[I]blocks.\f[] In case of pmem \f[I]log\f[] pool type data is dumped
as a whole or in \f[I]chunks\f[] if \f[B]\-w\f[] option is used (See
\f[B]Options for PMEMLOG\f[] section for details).
.PP
\f[C]\-r,\ \[en]range\ <range>\f[]
.PP
: Range of blocks/data chunks/objects/zone headers/chunk headers/lanes.
See \f[B]RANGE\f[] section for details about range format.
.PP
\f[C]\-n,\ \[en]human\f[]
.PP
: Print sizes in human\-readable format with appropriate units (e.g.
4k, 8M, 16G)
.PP
\f[C]\-x,\ \[en]headers\-hex\f[]
.PP
: Print pool's internal data in mixed format which consists of
hexadecimal dump of header's data and parsed format displayed in
human\-readable format.
This allows to see how data is stored in file.
.PP
\f[C]\-s,\ \[en]stats\f[]
.PP
: Print pool's statistics.
See \f[B]STATISTICS\f[] section for details.
.PP
\f[C]\-h,\ \[en]help\f[]
.PP
: Display help message and exit.
.SS Options for PMEMLOG:
.PP
\f[C]\-w,\ \[en]walk\ <size>\f[]
.PP
: Use this option to walk through used data with fixed data chunk size.
See \f[C]pmemlog_walk()\f[] in \f[B]libpmemlog(3)\f[] for details.
.SS Options for PMEMBLK:
.PP
By default the \f[C]info\f[] command displays the pmem blk header and
BTT (Block Translation Table) Info header in case of pmem blk pool type.
.PP
To display BTT Map and/or BTT FLOG (Free List and Log) use \f[C]\-m\f[]
and \f[C]\-g\f[] options respectively or increase verbosity level.
.PP
In order to display BTT Info header backup use \f[C]\-B\f[] option.
.PP
\f[C]\-m,\ \[en]map\f[]
.PP
: Print BTT Map entries.
.PP
\f[C]\-g,\ \[en]flog\f[]
.PP
: Print BTT FLOG entries.
.PP
\f[C]\-B,\ \[en]backup\f[]
.PP
: Print BTT Info header backup.
.RS
.PP
By default the \f[C]info\f[] command displays all data blocks when
\f[C]\-d\f[] options is used.
However it is possible to skip blocks marked with \f[I]zero\f[] and/or
\f[I]error\f[] flags.
It is also possible to skip blocks which are \f[I]not\f[] marked with
any flag.
Skipping blocks has impact on blocks ranges (e.g.
display 10 blocks marked with error flag in the range from 0 to 10000)
and statistics.
.RE
.PP
\f[C]\-z,\ \[en]skip\-zeros\f[]
.PP
: Skip blocks marked with \f[I]zero\f[] flag.
.PP
\f[C]\-e,\ \[en]skip\-error\f[]
.PP
: Skip blocks marked with \f[I]error\f[] flag.
.PP
\f[C]\-u,\ \[en]skip\-no\-flag\f[]
.PP
: Skip blocks \f[I]not\f[] marked with any flag.
.SS Options for PMEMOBJ:
.PP
By default the \f[C]info\f[] command displays pool header and \f[B]pmem
obj\f[] pool descriptor.
In order to print information about other data structures one of the
following options may be used.
.PP
\f[C]\-l,\ \[en]lanes\ [<range>]\f[]
.PP
: Print information about lanes.
If range is not specified all lanes are displayed.
The range can be specified using \f[C]\-r\f[] option right after the
\f[C]\-l\f[] option.
See \f[B]RANGE\f[] section for details about range format.
.PP
\f[C]\-R,\ \[en]recovery\f[]
.PP
: Print information about only those lanes which require recovery
process.
This option requires \f[C]\-l,\ \[en]lanes\f[] option.
.PP
\f[C]\-S,\ \[en]section\ tx,allocator,list\f[]
.PP
: Print information only about specified sections from lane.
The section types may be separated by comma.
This option requires \f[C]\-l,\ \[en]lanes\f[] option.
.PP
\f[C]\-O,\ \[en]object\-store\f[]
.PP
: Print information about all allocated objects.
.PP
\f[C]\-t,\ \[en]types\ <range>\f[]
.PP
: Print information about allocated objects only from specified range of
type numbers.
If \f[C]\-s,\ \[en]stats\f[] option is specified the objects statistics
refer to objects from specified range of type numbers.
This option requires \f[C]\-O,\ \[en]object\-store\f[] or
\f[C]\-s,\ \[en]stats\f[] options.
See \f[B]RANGE\f[] section for details about range format.
.PP
\f[C]\-E,\ \[en]no\-empty\f[]
.PP
: Ignore empty lists of objects.
This option requires \f[C]\-O,\ \[en]object\-store\f[] option.
.PP
\f[C]\-o,\ \[en]root\f[]
.PP
: Print information about a root object.
.PP
\f[C]\-A,\ \[en]alloc\-header\f[]
.PP
: Print object's allocation header.
This option requires \f[C]\-O,\ \[en]object\-store\f[] or
\f[C]\-l,\ \[en]lanes\f[] or \f[C]\-o,\ \[en]root\f[] options.
.PP
\f[C]\-a,\ \[en]oob\-header\f[]
.PP
: Print object's out of band header.
This option requires \f[C]\-O,\ \[en]object\-store\f[] or
\f[C]\-l,\ \[en]lanes\f[] or \f[C]\-o,\ \[en]root\f[] options.
.PP
\f[C]\-H,\ \[en]heap\f[]
.PP
: Print information about \f[B]pmemobj\f[] heap.
By default only a heap header is displayed.
.PP
\f[C]\-Z,\ \[en]zones\f[]
.PP
: If the \f[C]\-H,\ \[en]heap\f[] option is used, print information
about zones from specified range.
If the \f[C]\-O,\ \[en]object\-store\f[] option is used, print
information about objects only from specified range of zones.
This option requires \f[C]\-O,\ \[en]object\-store\f[] ,
\f[C]\-H,\ \[en]heap\f[] or \f[C]\-s,\ \[en]stats\f[] options.
The range can be specified using \f[C]\-r\f[] option right after the
\f[C]\-Z\f[] option.
See \f[B]RANGE\f[] section for details about range format.
.PP
\f[C]\-C,\ \[en]chunks\ [<range>]\f[]
.PP
: If the \f[C]\-H,\ \[en]heap\f[] option is used, print information
about chunks from specified range.
By default information about chunks of types \f[I]used\f[] ,
\f[I]free\f[] and \f[I]run\f[] are displayed.
If the \f[C]\-O,\ \[en]object\-store\f[] option is used, print
information about objects from specified range of chunks within a zone.
This option requires \f[C]\-O,\ \[en]object\-store\f[] ,
\f[C]\-H,\ \[en]heap\f[] or \f[C]\-s,\ \[en]stats\f[] options.
The range can be specified using \f[C]\-r\f[] option right after the
\f[C]\-C\f[] option.
See \f[B]RANGE\f[] section for details about range format.
.PP
\f[C]\-T,\ \[en]chunk\-type\ used,free,run,footer\f[]
.PP
: Print only specified type(s) of chunks.
The multiple types may be specified separated by comma.
This option requires \f[C]\-H,\ \[en]heap\f[] and
\f[C]\-C,\ \[en]chunks\f[] options.
.PP
\f[C]\-b,\ \[en]bitmap\f[]
.PP
: Print bitmap of used blocks in chunks of type run.
This option requires \f[C]\-H,\ \[en]heap\f[] and
\f[C]\-C,\ \[en]chunks\f[] options.
.PP
\f[C]\-p,\ \[en]replica\ <num>\f[]
.PP
: Print information from \f[C]<num>\f[] replica.
The 0 value means the master pool file.
.SS RANGE
.PP
Using \f[C]\-r,\ \[en]range\f[] option it is possible to dump only a
range of user data.
This section describes valid format of \f[C]<range>\f[] string.
.PP
You can specify multiple ranges separated by commas.
.PP
\f[C]<first>\-<last>\f[]
.PP
: All blocks/bytes/data chunks from \f[C]<first>\f[] to \f[C]<last>\f[]
will be dumped.
.PP
\f[C]\-<last>\f[]
.PP
: All blocks/bytes/data chunks up to \f[C]<last>\f[] will be dumped.
.PP
\f[C]<first>\-\f[]
.PP
: All blocks/bytes/data chunks starting from \f[C]<first>\f[] will be
dumped.
.PP
\f[C]<number>\f[]
.PP
: Only \f[C]<number>\f[] block/byte/data chunk will be dumped.
.SS STATISTICS
.PP
Below is the description of statistical measures for specific pool
types.
.SS PMEMLOG
.TP
.B \f[B]Total\f[]
Total space in pool.
.RS
.RE
.TP
.B \f[B]Available\f[]
Size and percentage of available space.
.RS
.RE
.TP
.B \f[B]Used\f[]
Size and percentage of used space.
.RS
.RE
.SS PMEMBLK
.TP
.B \f[B]Total blocks\f[]
Total number of blocks in pool.
.RS
.RE
.TP
.B \f[B]Zeroed blocks\f[]
Number and percentage of blocks marked with \f[I]zero\f[] flag.
.RS
.RE
.TP
.B \f[B]Error blocks\f[]
Number and percentage of blocks marked with \f[I]error\f[] flag.
.RS
.RE
.TP
.B \f[B]Blocks without any flag\f[]
Number and percentage of blocks \f[I]not\f[] marked with any flag.
.RS
.RE
.RS
.PP
NOTE In case of pmemblk, statistics are evaluated for blocks which meet
requirements regarding: * \f[I]range\f[] of blocks ( \f[C]\-r\f[]
option), * \f[I]skipped\f[] types of blocks ( \f[C]\-z\f[],
\f[C]\-e\f[], \f[C]\-u\f[] options).
.RE
.SS PMEMOBJ
.IP \[bu] 2
\f[B]Object store\f[]
.RS 2
.PP
\f[B]Number of objects\f[]
.PP
: Total number of objects and number of objects per type number.
.PP
\f[B]Number of bytes\f[]
.PP
: Total number of bytes and number of bytes per type number.
.RE
.IP \[bu] 2
\f[B]Heap\f[]
.RS 2
.PP
\f[B]Number of zones\f[]
.PP
: Total number of zones in the pool.
.PP
\f[B]Number of used zones\f[]
.PP
: Number of used zones in the pool.
.RE
.IP \[bu] 2
\f[B]Zone\f[] The zone's statistics are presented for each zone
separately and the aggregated results from all zones.
.RS 2
.PP
\f[B]Number of chunks\f[]
.PP
: Total number of chunks in the zone and number of chunks of specified
type.
.PP
\f[B]Chunks size\f[]
.PP
: Total size of all chunks in the zone and sum of sizes of chunks of
specified type.
.PP
\f[B]Allocation classes\f[]
.PP
\f[B]Units\f[]
.PP
: Total number of units of specified class.
.PP
\f[B]Used units\f[]
.PP
: Number of used units of specified class.
.PP
\f[B]Bytes\f[]
.PP
: Total number of bytes of specified class.
.PP
\f[B]Used bytes\f[]
.PP
: Number of used bytes of specified class.
.PP
\f[B]Total bytes\f[]
.PP
: Total number of bytes of all classes.
.PP
\f[B]Total used bytes\f[]
.PP
: Total number of used bytes of all classes.
.RE
.SS EXAMPLES
.PP
\f[C]pmempool\ info\ ./pmemblk\f[]
.PP
: Parse and print information about pmem blk file.
.PP
\f[C]pmempool\ info\ \-f\ blk\ ./pmemblk\f[]
.PP
: Force parsing pmemblk file as PMEM BLK pool type.
.PP
\f[C]pmempool\ info\ \-d\ ./pmemlog\f[]
.PP
: Print information and data in hexadecimal dump format for file pmem
log.
.PP
\f[C]mempool\ info\ \-d\ \-r10\-100\ \-eu\ ./pmemblk\f[]
.PP
: Print information from pmemblk file.
Dump data blocks from 10 to 100, skip blocks marked with error flag and
not marked with any flag.
.SS SEE ALSO
.PP
\f[B]libpmemblk(3)\f[], \f[B]libpmemlog(3)\f[], \f[B]pmempool(1)\f[]
.SS PMEMPOOL
.PP
Part of the \f[B]pmempool(1)\f[] suite.
